%!PS-Adobe-2.0 EPSF-2.0
%%Title: queries2.eps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Mon Sep 24 10:39:49 2012
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 230 176
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -43 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (queries2.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (fiskio)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Sep 24 10:39:49 2012)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 230 50 lineto 230 176 lineto 50 176 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Arial) findfont 130 scalefont setfont
1.000 UL
LTb
637 506 M
63 0 V
2665 0 R
-63 0 V
stroke
559 506 M
[ [(Arial) 130.0 0.0 true true 0 ( 0)]
] -43.3 MRshow
1.000 UL
LTb
637 878 M
63 0 V
2665 0 R
-63 0 V
stroke
559 878 M
[ [(Arial) 130.0 0.0 true true 0 ( 0.2)]
] -43.3 MRshow
1.000 UL
LTb
637 1249 M
63 0 V
2665 0 R
-63 0 V
stroke
559 1249 M
[ [(Arial) 130.0 0.0 true true 0 ( 0.4)]
] -43.3 MRshow
1.000 UL
LTb
637 1621 M
63 0 V
2665 0 R
-63 0 V
stroke
559 1621 M
[ [(Arial) 130.0 0.0 true true 0 ( 0.6)]
] -43.3 MRshow
1.000 UL
LTb
637 1992 M
63 0 V
2665 0 R
-63 0 V
stroke
559 1992 M
[ [(Arial) 130.0 0.0 true true 0 ( 0.8)]
] -43.3 MRshow
1.000 UL
LTb
637 2364 M
63 0 V
2665 0 R
-63 0 V
stroke
559 2364 M
[ [(Arial) 130.0 0.0 true true 0 ( 1)]
] -43.3 MRshow
1.000 UL
LTb
781 506 M
0 63 V
0 1795 R
0 -63 V
stroke
781 428 M
currentpoint gsave translate -45 rotate 0 0 moveto
[ [(Arial) 130.0 0.0 true true 0 (180)]
] -43.3 MLshow
grestore
1.000 UL
LTb
924 506 M
0 63 V
0 1795 R
0 -63 V
stroke
924 428 M
currentpoint gsave translate -45 rotate 0 0 moveto
[ [(Arial) 130.0 0.0 true true 0 (240)]
] -43.3 MLshow
grestore
1.000 UL
LTb
1068 506 M
0 63 V
0 1795 R
0 -63 V
stroke
1068 428 M
currentpoint gsave translate -45 rotate 0 0 moveto
[ [(Arial) 130.0 0.0 true true 0 (300)]
] -43.3 MLshow
grestore
1.000 UL
LTb
1211 506 M
0 63 V
0 1795 R
0 -63 V
stroke
1211 428 M
currentpoint gsave translate -45 rotate 0 0 moveto
[ [(Arial) 130.0 0.0 true true 0 (360)]
] -43.3 MLshow
grestore
1.000 UL
LTb
1355 506 M
0 63 V
0 1795 R
0 -63 V
stroke
1355 428 M
currentpoint gsave translate -45 rotate 0 0 moveto
[ [(Arial) 130.0 0.0 true true 0 (420)]
] -43.3 MLshow
grestore
1.000 UL
LTb
1498 506 M
0 63 V
0 1795 R
0 -63 V
stroke
1498 428 M
currentpoint gsave translate -45 rotate 0 0 moveto
[ [(Arial) 130.0 0.0 true true 0 (480)]
] -43.3 MLshow
grestore
1.000 UL
LTb
1642 506 M
0 63 V
0 1795 R
0 -63 V
stroke
1642 428 M
currentpoint gsave translate -45 rotate 0 0 moveto
[ [(Arial) 130.0 0.0 true true 0 (540)]
] -43.3 MLshow
grestore
1.000 UL
LTb
1786 506 M
0 63 V
0 1795 R
0 -63 V
stroke
1786 428 M
currentpoint gsave translate -45 rotate 0 0 moveto
[ [(Arial) 130.0 0.0 true true 0 (600)]
] -43.3 MLshow
grestore
1.000 UL
LTb
1929 506 M
0 63 V
0 1795 R
0 -63 V
stroke
1929 428 M
currentpoint gsave translate -45 rotate 0 0 moveto
[ [(Arial) 130.0 0.0 true true 0 (660)]
] -43.3 MLshow
grestore
1.000 UL
LTb
2073 506 M
0 63 V
0 1795 R
0 -63 V
stroke
2073 428 M
currentpoint gsave translate -45 rotate 0 0 moveto
[ [(Arial) 130.0 0.0 true true 0 (720)]
] -43.3 MLshow
grestore
1.000 UL
LTb
2216 506 M
0 63 V
0 1795 R
0 -63 V
stroke
2216 428 M
currentpoint gsave translate -45 rotate 0 0 moveto
[ [(Arial) 130.0 0.0 true true 0 (780)]
] -43.3 MLshow
grestore
1.000 UL
LTb
2360 506 M
0 63 V
0 1795 R
0 -63 V
stroke
2360 428 M
currentpoint gsave translate -45 rotate 0 0 moveto
[ [(Arial) 130.0 0.0 true true 0 (840)]
] -43.3 MLshow
grestore
1.000 UL
LTb
2504 506 M
0 63 V
0 1795 R
0 -63 V
stroke
2504 428 M
currentpoint gsave translate -45 rotate 0 0 moveto
[ [(Arial) 130.0 0.0 true true 0 (900)]
] -43.3 MLshow
grestore
1.000 UL
LTb
2647 506 M
0 63 V
0 1795 R
0 -63 V
stroke
2647 428 M
currentpoint gsave translate -45 rotate 0 0 moveto
[ [(Arial) 130.0 0.0 true true 0 (960)]
] -43.3 MLshow
grestore
1.000 UL
LTb
2791 506 M
0 63 V
0 1795 R
0 -63 V
stroke
2791 428 M
currentpoint gsave translate -45 rotate 0 0 moveto
[ [(Arial) 130.0 0.0 true true 0 (1020)]
] -43.3 MLshow
grestore
1.000 UL
LTb
2934 506 M
0 63 V
0 1795 R
0 -63 V
stroke
2934 428 M
currentpoint gsave translate -45 rotate 0 0 moveto
[ [(Arial) 130.0 0.0 true true 0 (1080)]
] -43.3 MLshow
grestore
1.000 UL
LTb
3078 506 M
0 63 V
0 1795 R
0 -63 V
stroke
3078 428 M
currentpoint gsave translate -45 rotate 0 0 moveto
[ [(Arial) 130.0 0.0 true true 0 (1140)]
] -43.3 MLshow
grestore
1.000 UL
LTb
3221 506 M
0 63 V
0 1795 R
0 -63 V
stroke
3221 428 M
currentpoint gsave translate -45 rotate 0 0 moveto
[ [(Arial) 130.0 0.0 true true 0 (1200)]
] -43.3 MLshow
grestore
1.000 UL
LTb
1.000 UL
LTb
637 2364 N
637 506 L
2728 0 V
0 1858 V
-2728 0 V
Z stroke
LCb setrgbcolor
104 1435 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Arial) 130.0 0.0 true true 0 (SIC)]
] -43.3 MCshow
grestore
LTb
LCb setrgbcolor
2001 91 M
[ [(Arial) 130.0 0.0 true true 0 (number of queries)]
] -43.3 MCshow
LTb
1.500 UP
1.000 UL
LTb
% Begin plot #1
1.000 UL
LT0
LCb setrgbcolor
2429 2236 M
[ [(Arial) 130.0 0.0 true true 0 (IQR)]
] -43.3 MLshow
LT0
1.000 2101 2204 250 65 BoxColFill
1.000 745 506 25 284 BoxColFill
1.000 888 506 25 298 BoxColFill
1.000 1032 506 25 289 BoxColFill
1.000 1175 506 25 284 BoxColFill
1.000 1319 506 25 251 BoxColFill
1.000 1463 506 25 214 BoxColFill
1.000 1606 506 25 178 BoxColFill
1.000 1750 506 25 158 BoxColFill
1.000 1893 506 25 159 BoxColFill
1.000 2037 506 25 141 BoxColFill
1.000 2180 506 25 144 BoxColFill
1.000 2324 506 25 113 BoxColFill
1.000 2468 506 25 122 BoxColFill
1.000 2611 506 25 112 BoxColFill
1.000 2755 506 25 122 BoxColFill
1.000 2898 506 25 126 BoxColFill
1.000 3042 506 25 102 BoxColFill
1.000 3186 506 24 105 BoxColFill
% End plot #1
% Begin plot #2
1.000 UL
LT1
LCb setrgbcolor
2429 2106 M
[ [(Arial) 130.0 0.0 true true 0 (std)]
] -43.3 MLshow
LT1
1.000 2101 2074 250 65 BoxColFill
1.000 769 506 25 219 BoxColFill
1.000 912 506 25 255 BoxColFill
1.000 1056 506 25 241 BoxColFill
1.000 1199 506 25 217 BoxColFill
1.000 1343 506 25 190 BoxColFill
1.000 1487 506 24 172 BoxColFill
1.000 1630 506 25 178 BoxColFill
1.000 1774 506 25 147 BoxColFill
1.000 1917 506 25 132 BoxColFill
1.000 2061 506 25 107 BoxColFill
1.000 2204 506 25 99 BoxColFill
1.000 2348 506 25 85 BoxColFill
1.000 2492 506 24 81 BoxColFill
1.000 2635 506 25 78 BoxColFill
1.000 2779 506 25 111 BoxColFill
1.000 2922 506 25 76 BoxColFill
1.000 3066 506 25 71 BoxColFill
1.000 3209 506 25 65 BoxColFill
% End plot #2
% Begin plot #3
1.000 UL
LT2
LCb setrgbcolor
2429 1976 M
[ [(Arial) 130.0 0.0 true true 0 (mean)]
] -43.3 MLshow
LT2
1.000 2101 1944 250 65 BoxColFill
1.000 793 506 24 1674 BoxColFill
1.000 936 506 25 1474 BoxColFill
1.000 1080 506 25 1291 BoxColFill
1.000 1223 506 25 1094 BoxColFill
1.000 1367 506 25 938 BoxColFill
1.000 1510 506 25 837 BoxColFill
1.000 1654 506 25 778 BoxColFill
1.000 1798 506 25 730 BoxColFill
1.000 1941 506 25 664 BoxColFill
1.000 2085 506 25 573 BoxColFill
1.000 2228 506 25 531 BoxColFill
1.000 2372 506 25 458 BoxColFill
1.000 2515 506 25 409 BoxColFill
1.000 2659 506 25 386 BoxColFill
1.000 2803 506 25 277 BoxColFill
1.000 2946 506 25 340 BoxColFill
1.000 3090 506 25 340 BoxColFill
1.000 3233 506 25 282 BoxColFill
% End plot #3
% Begin plot #4
1.000 UL
LT3
LCb setrgbcolor
2429 1846 M
[ [(Arial) 130.0 0.0 true true 0 (Q0.95-Q0.05)]
] -43.3 MLshow
LT3
1.000 2101 1814 250 65 BoxColFill
1.000 816 506 25 737 BoxColFill
1.000 960 506 25 888 BoxColFill
1.000 1104 506 25 777 BoxColFill
1.000 1247 506 25 695 BoxColFill
1.000 1391 506 25 639 BoxColFill
1.000 1534 506 25 565 BoxColFill
1.000 1678 506 25 596 BoxColFill
1.000 1822 506 24 445 BoxColFill
1.000 1965 506 25 424 BoxColFill
1.000 2109 506 25 325 BoxColFill
1.000 2252 506 25 293 BoxColFill
1.000 2396 506 25 265 BoxColFill
1.000 2539 506 25 240 BoxColFill
1.000 2683 506 25 247 BoxColFill
1.000 2827 506 25 412 BoxColFill
1.000 2970 506 25 237 BoxColFill
1.000 3114 506 25 220 BoxColFill
1.000 3257 506 25 201 BoxColFill
% End plot #4
1.000 UL
LTb
637 2364 N
637 506 L
2728 0 V
0 1858 V
-2728 0 V
Z stroke
1.500 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Arial
